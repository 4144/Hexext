This release is less stable than the one in the root of the repository. There are a few possible interrs that can occur from it.

The entire instruction combination pass is currently being reworked so some rules in the main release are disabled in this build.

This build adds several rules for simplifying complicated boolean/arithmetic expressions that can be generated when a compiler
chooses to used lea to combine conditions. 

The other big change is automatic thunk resolution (currently only for x86-64, should be easy to implement for ARM64 too).
When a call to a thunk function is detected, the target address of the call is resolved to the function which the thunk jumps to. 
The microgen filter api was reworked to allow for instruction rewriters to run within other instruction rewriters and instruction filters.

This means small functions whose only control flow is a call to a nullsub and a return can now be inlined, thunk resolution 
can result in the target function being inlined, and all other microgen additions can operate on inlined functions now as well.

The thunk resolution is extremely useful because any types applied to a function in the decompiler view will
be applied directly to the real callee, not to the thunk.
